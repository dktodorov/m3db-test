---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasource.yaml: |-
    ---
    apiVersion: 1

    datasources:
      - name: prometheus
        url: http://prometheus-service.default.svc.cluster.local:8081
        type: prometheus
        orgId: 1
        access: proxy
        editable: true
        version: 1
        
      - name: prometheus-m3db
        url: http://prometheus-m3db-service.default.svc.cluster.local:8080
        type: prometheus
        orgId: 1
        access: proxy
        editable: true
        version: 1
      
      - name: test
        url: http://prometheus-m3db-service.default.svc.cluster.local:8080
        type: prometheus
        orgId: 1
        access: proxy
        editable: true
        version: 1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        image: grafana/grafana:latest
        ports:
        - name: grafana
          containerPort: 3000
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests: 
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
            readOnly: false
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasources
          configMap:
              defaultMode: 420
              name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '3000'
spec:
  selector: 
    app: grafana
  type: NodePort  
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "grafana-ip"
spec:
  backend:
      serviceName: grafana
      servicePort: 3000
